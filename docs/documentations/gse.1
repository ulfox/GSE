.TH "GSE" "1"
.SH NAME
GSE \- Gentoo Stateless Environment
.SH SYNOPSIS
.B gse 
[\fBOPTIONS\fR]
.SH "DESCRIPTION"
.nf
\fBGSE\fR is a set of scripts and configuration files that takes special advantage of catalyst,
for creating a Gentoo system intended to function under stateless conditions, a modular kernel
and an initramfs which provide functions to further control and modify such a system.
.fi
.SH OPTIONS
.TP
.nf
\fB\-\-menuXYZ...\fR \fB\-mXYZ...\fR
X stands for the menu entry Y its submenu entry and same follows for the rest. 
To bring configurations entry, which lie under 'System Menu' -> 'Configure built variables',
one could simply type gse --m12 instead of gse and then guide himself through the menu entries.
.fi
.TP
\fB\-\-fetch-new\fR \fB\-fn\fR
.nf
By default GSE will fetch snapshot and stag3 files if the local files are missing, if they do not
pass local verifications, or if they fail any other health check test. By passing -fn, 
gse is instructed to fetch new snapshots and stag3 tarballs.
.fi
.TP
\fB\-\-start-new\fR \fB\-sn\fR
When gse is asked to build a new system, it checks local files and decided from where it should resume, if
it work had been done in the past. At the beginning a prompt start new or continue from where you left off
appears and then at each Part X: (see man 5 gse for Stages, Parts and Masks) a prompt asks if you want to
continue or run again that Part, in case configuration changes have been made. If one wants to force gse to
force new builds, without any prompt (could be used if someone wants to enable the build, and simple go away),
then -sn should be used.

Warning: This option purges everything in the workdir.
.fi
.TP
\fB\-\-help\fR \fB\-h\fR
.nf
Prints the help screen and exits
.fi
.TP
\fB\-\-keep\fR \fB\-k\fR
.nf
This option does what the start-new option, however it saves all work done /var/gse/work-<date>.
If disk space is not an issue, then this option should be preferred rather than -sn
.fi
.TP
\fB\-\-health-check\fR \fB\-hc\fR
.nf
This option simply checks the important scrips for modifications and marks them for restore if
changes are found.
.fi
.TP
\fB\-\-replace-new\fR \fB\-rpn\fR
This options replaces all configuration data, and scripts. You don't want to use this, unless
configuration data have been lost or altered beyond a restore point. The script files can be refreshed from
the health-check entry.
.fi
.TP
\fB\-\-no-kernel\fR \fB\-nk\fR
.nf
This option forces gse to exclude the kernel fromt Stage B building sequence. This option implies
--no-initramfs also. If you use no kernel, you must then provide your kernel moddir, and build
and intiramfs as a separate step.
.fi
.TP
\fB\-\-no-initramfs\fR \fB\-ni\fR
.nf
This option instructs gse to exclude the initramfs build from Stage B building sequence.
.fi
.TP
\fB\-\-build-controller\fR [\fB\-\fR\fIkernel-mods\fR] \fB\-\-bc\fR [\fB\-\fR\fIkernel-mods\fR]
.nf
This option will instruct gse to build only the controller. To build the initramf outside of the 
stage B you have to provide the gse with the directory containing the kernel modules. 
Be warrned however, that the setup is based on a modular kernel, therefore be sure to include
the entries that your clients will require to function and not to remove any of 
{overlayFS, tmpfs, nfs, fuser} entries.
.fi
.TP
\fB\-\-build-system\fR \fB\-\-bs\fR
.nf
This option instructs the gse to build only the system. Kernel, initramfs and the packages
required for those, will be excluded, during Stage B.
.fi
.TP
\fB\-\-build-minimal\fR \fB\-\-bm\fR
.nf
This option forces gse to exclude all extra packages that are found at chinit.conf, which is
located at /scripts/chroot_scripts. This option implies --no-kernel --no-initramfs.
.fi
.SH "SEE ALSO"
.nf
man 5 gse

