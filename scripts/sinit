#!/bin/bash

# STAGE A
# CHECK POSITIONAL PARAMETERS
[[ -z "$@" ]] && print_inf 4 && return 1

echo "============================================================================"
echo -e "[\e[32m*\e[0m] \e[34mInitializing\e[0m"
# ALL ESSENTIAL VARIABLES FOR THE DOWNLOAD AND AUTHENTICATION PROCESS
source "${CWORKDIR}/etc/gentoo.conf" >/dev/null 2>&1 \
&& echo -e "[\e[32m*\e[0m] \e[35mExporting variables\e[0m" \
&& echo "============================================================================" \
|| { echo -e "[\e[31m*\e[0m] \e[35mExporting variables\e[0m"; echo -e "[\e[31mAborting\e[0m..."; sleep 2; return 1; }
		
part_a_f() {
# CALL CATALYST BUILD OR PRECOMPILED BUILD
case "$2" in
	catalyst)
		# PART A FUNDAMENTALS
		fundamentals_f "${CDISTDIR}/workdir-catalyst"
		if [[ -n $(echo "$@" | grep 'seed') ]]; then
			fetch_new_f "$@" || { print_inf_f 2 && exit; }
		fi
		if [[ "$(awk -F '=' '/CATALYST/{ print $2 }' <"${CLOCALLG}/sinprog")" == 0 ]]; then
			calling_catalyst_f "$@" || exit 1
		else
			repeat_sub_part_f "Catalyst" "configured" \
			&& [[ "$?" == 0 ]] && { calling_catalyst_f "$@" || exit 1; } \
			|| echo -e "\e[33mProceeding with extraction...\e[0m"
		fi \
		&& [[ "$?" == 0 || "$?" == 9 ]] \
		&& if [[ "$(awk -F '=' '/EXTRACTION/{ print $2 }' <"${CLOCALLG}/sinprog")" == 0 ]]; then
			catalyst_extr_tar_f || exit 1
		else
			repeat_sub_part_f "Extraction" "completed" \
			&& [[ "$?" == 0 ]] && { catalyst_extr_tar_f || exit 1; } \
			|| echo -e "\e[33mProceeding to Part: B...\e[0m"
		fi \
		&& [[ "$?" == 0 || "$?" == 9 ]] \
		&& export BWORKDIR="${CDISTDIR}/workdir-catalyst" \
		&& PARTBCOND="0"
		unset CATDIR
		unset TARGETNAME
		unset TARGETPATH
		unset TARGETSTAMP
		;;
	precomp)
		# PART A FUNDAMENTALS
		fundamentals_f "${CDISTDIR}/workdir-precomp"
		if [[ -n $(echo "$@" | grep 'seed') ]]; then
			fetch_new_f "$@" || { print_inf_f 2 && exit; }
		fi
		if [[ "$(awk -F '=' '/PRECOMP/{ print $2 }' <"${CLOCALLG}/sinprog")" == 0 ]]; then
			check_dir_f "${CDISTDIR}/dists/stage3-${ARCH}-latest.tar.bz2" \
			"${CDISTDIR}/workdir-precomp" || exit 1
		else
			repeat_sub_part_f "Precomp Extraction" "completed" && { check_dir_f \
			"${CDISTDIR}/dists/stage3-${ARCH}-latest.tar.bz2" \
			"${CDISTDIR}/workdir-precomp" || exit 1; }
		fi \
		&& echo $? \
		&& [[ "$?" == 0 || "$?" == 9 ]] \
		&& export BWORKDIR="${CDISTDIR}/workdir-precomp" \
		&& PARTBCOND="0" \
		&& sinit_mon_f "PRECOMP"
		;;
esac
}

if [[ "$(awk -F '=' '/PARTA/{ print $2 }' <"${CLOCALLG}/sinprog")" == 1 ]]; then
	repeat_part_f "A" && part_a_f "$@"

	[[ "$?" == 0 || "$?" == 9 ]] \
	&& if [[ -n $(echo "$@" | grep 'catalyst') ]]; then
		export BWORKDIR="${CDISTDIR}/workdir-catalyst" \
		&& PARTBCOND="0"
	elif [[ -n $(echo "$@" | grep 'precomp') ]]; then
		export BWORKDIR="${CDISTDIR}/workdir-precomp" \
		&& PARTBCOND="0"
	fi \
	|| { echo -e "\e[31mNo workdir defined. Wont proceed!\e[0m" \
	&& echo "$@" && exit 1; }
else
	part_a_f "$@"
fi

[[ "${PARTBCOND}" != 0 ]] && echo -e "\e[31mNo workdir defined. Wont proceed!\e[0m" \
&& echo "$@" && exit 1
echo
echo "============================================================================"
echo -e "\e[35mPART:B Preparing to enter the new system\e[0m"
echo "============================================================================"

amiroot "$UID" && echo -e "[\e[32m*\e[0m] Requesting root privileges" \
|| { echo -e "[\e[31m*\e[0m] Requesting root privileges"; exit 1; }

TARGETSTAMP="$(grep 'version_stamp' "${CCONFDIR}/system/catalyst/stage3.spec" \
| sed '/^#/ d' | awk -F ' ' '{ print $2 }' | sed  -e "s_\"__g")"\
&& if pr_chroot_f "${BWORKDIR}" "$@"; then
	SUBBUILD=0
	GSEVER="${GSEVER}.${SUBBUILD}"
	while true; do
		if ! ls "${CDISTDIR}/stage3-amd64-${GSEVER}.tar.bz2" >/dev/null 2>&1; then
			echo -e "\e[34mArchiving...\e[0m"
			tar cvf "${CDISTDIR}/stage3-amd64-${GSEVER}.tar.bz2" -C "${BWORKDIR}" >/dev/null 2>&1 \
			&& { print_inf 1 && echo -e "\e[34mYou can find your system @ ${CDISTDIR}\e[0m"
			echo -e "\e[34mWith version extension: ${GSEVER}\e[0m"; } \
			|| { print_inf 2; exit 1; }
			break
		else
			((++SUBBUILD))
		fi
	done
else
	exit 1
fi

exit

gpg --armor --export email > "${FINALDIST}/key.asc" # THIS WILL BE ADDED TO THE HOSTS
gpg --detach-sign -o ${GSE_VER}.gpg "${FINALDIST}/${IMAGE}"
#rm -rf "$1/sinit.d"
unset CATDIR
unset TARGETPATH
unset TARGETSTAMP