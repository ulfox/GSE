#!/bin/bash

#
# THIS SCRIPT PROVIDES A SIMPLE GUIDES CONFIGURATION FOR THE FSTAB
#

if echo "${_flag_tty}" | grep -q 'sshd'; then
	LC_COLLATE="C"
	LC_ALL="en_US.UTF-8"
	LC_CTYPE="en_US.UTF-8"
fi

fs_opt() {
	case $1 in
		1)
			echo -e "###############  \e[94m~~File systems~~\e[39m   ###############"
			echo "##						 ##"
			echo -e "## [ \e[32mI\e[39m  ]	ext2		                 ##"
			echo -e "## [ \e[32mII\e[39m ]	ext3				 ##"
			echo -e "## [ \e[32mIII\e[39m]	ext4				 ##"
			echo -e "## [ \e[32mIV\e[39m ]	btrfs				 ##"
			echo -e "## [ \e[32mV\e[39m  ]	vfat				 ##"
			echo "##						 ##"
			echo "###################################################"
			;;
	esac
}

FS_OPTS=(BOOTFS SYSFS USERDATAFS)

for i in "${FS_OPTS[@]}"; do
		clear; fs_opt 1
		read -rp "Please select the fs type of $i partition: " SELCT
		case ${SELCT:-5} in
			I|i|1|-I|-i|-1)
				eval "$i"=ext2;;
			II|ii|2|-II|-ii|-2)
				eval "$i"=ext3;;
			III|iii|3|-III|-iii|-3)
				eval "$i"=ext4;;
			IV|iv|4|-IV|-iv|-4)
				eval "$i"=btrfs;;
			V|v|5|-V|-v|-5)
				eval "$i"=vfat;;
			* ) clear; fs_opt 7;;
		esac
done

if [[ "${BOOTFS}" == 'btrfs' ]]; then
	FBOPTIONS='ro,noatime,subvol=/bootfs'
	BDPPS='0 0'
else
	FBOPTIONS='ro,noatime'
	BDPPS='0 2'
fi

if [[ "${SYSFS}" == 'btrfs' ]]; then
	FSOPTIONS='ro,noatime,subvol=/sysfs'
	SDPPS='0 0'
else
	FSOPTIONS="ro,noatime"
	SDPPS="0 1"
fi

if [[ "${USERDATAFS}" == 'btrfs' ]]; then
	FUOPTIONS='defaults,noatime,subvol=/userdatafs'
	UDPPS='0 0'
else
	FUOPTIONS='defaults,noatime'
	UDPPS='0 1'
fi

cat >"${CCONFDIR}/system/fstab" <<\EOF
# /etc/fstab: static file system information.
#
# noatime turns off atimes for increased performance (atimes normally aren't
# needed); notail increases performance of ReiserFS (at the expense of storage
# efficiency).  It's safe to drop the noatime options if you want and to
# switch between notail / tail freely.
#
# The root filesystem should have a pass number of either 0 or 1.
# All other filesystems should have a pass number of 0 or greater than 1.
#
# See the manpage fstab(5) for more information.
#

# <fs>                  <mountpoint>    <type>          <opts>          <dump/pass>

# NOTE: If your BOOT partition is ReiserFS, add the notail option to opts.
#
# NOTE: Even though we list ext4 as the type here, it will work with ext2/ext3
#       filesystems.  This just tells the kernel to use the ext4 driver.
#
# NOTE: You can use full paths to devices like /dev/sda3, but it is often
#       more reliable to use filesystem labels or UUIDs. See your filesystem
#       documentation for details on setting a label. To obtain the UUID, use
#       the blkid(8) command.

#LABEL=boot             /boot           ext4            noauto,noatime  1 2
#UUID=58e72203-57d1-4497-81ad-97655bd56494              /               ext4            noatime         0 1
#LABEL=swap             none            swap            sw              0 0
#/dev/cdrom             /mnt/cdrom      auto            noauto,ro       0 0
EOF

# BOOT
echo >> "${CCONFDIR}/system/fstab"
echo "# BOOTFS" >> "${CCONFDIR}/system/fstab"
echo "LABEL=BOOTFS /boot ${BOOTFS} ${FBOPTIONS} ${BDPPS}" >>"${CCONFDIR}/system/fstab"

# SYSTEM
echo >> "${CCONFDIR}/system/fstab"
echo "# SYSTEM"	>> "${CCONFDIR}/system/fstab"
echo "LABEL=SYSTEM / ${SYS} ${FSOPTIONS} ${SDPPS}" >>"${CCONFDIR}/system/fstab"

# USERDATA
echo >> "${CCONFDIR}/system/fstab"
echo "# USER-DATA" >> "${CCONFDIR}/system/fstab"
echo "LABEL=USERDATAFS /user-data ${USERDATAFS}	${FUOPTIONS} ${UDPPS}" >>"${CCONFDIR}/system/fstab"

# HOME
echo >> "${CCONFDIR}/system/fstab"
echo "# HOME" >> "${CCONFDIR}/system/fstab"
echo "/user-data/persistent/home /home/ none rw,bind 0 0" >>"${CCONFDIR}/system/fstab"

_BOOTFSTYPE="${BOOTFS}"
_SYSFSTYPE="${SYSFS}"
_BACKUPFSTYPE="${SYSFS}"
_USERDATAFSTYPE="${USERDATAFS}"

unset BOOTFS
unset SYSFS
unset USERDATAFS
unset FS_OPTSS

dev_fs=(BOOTFS SYSFS BACKUPFS USERDATAFS)

_dev_opts() {
	echo -e "################  \e[94m~~Device ID~~\e[39m   #################"
	echo "##						 ##"
	echo -e "## [ \e[32mI\e[39m  ]	BY-ID	        	         ##"
	echo -e "## [ \e[32mII\e[39m ]	UUID				 ##"
	echo -e "## [ \e[32mIII\e[39m]	SDX				 ##"
	echo "##						 ##"
	echo "###################################################"
}

_dev_id() {
	case "$1" in
		BOOTFS)
			_BOOTID="$2";;
		SYSFS)
			_SYSID="$2";;
		BACKUPFS)
			_BACKUPID="$2";;
		USERDATAFS)
			_USERDATAID="$2";;
	esac
}

_dev_size() {
	case "$1" in
		BOOTFS)
			_BOOTSIZE="$2";;
		SYSFS)
			_SYSSIZE="$2";;
		BACKUPFS)
			_BACKUPSIZE="$2";;
		USERDATAFS)
			_USERDATASIZE="$2";;
	esac
}

_ask_dev_size() {
	while true; do
		echo "Please give the device $2 for $1"
		echo "$3"
		read -rp "Device $2: " _DSIZE
		echo "Your input was:"
		echo "${_DSIZE}"
		read -rp "Are you sure? Y/N " _ANS1
		case "${_ANS1}" in
			[yY])
				_dev_size "$1" "${_DSIZE}"
				break;;
			[nN])
				;;
			*	)
				clear
				echo "Wrong Answer"
				echo;;
		esac
	done
	unset _ANS1
	unset _DSIZE
}

_ask_opts() {
	while true; do
		echo "Please give the device $2 for $1"
		echo "$3"
		read -rp "Device $2: " _DID
		echo "Your input was:"
		echo "${_DID}"
		read -rp "Are you sure? Y/N " _ANS
		case "${_ANS}" in
			[yY])
				_dev_id "$1" "${_DID}"
				_ask_dev_size "$1" "size" "Number-G/M"
				break;;
			[nN])
				;;
			*	)
				clear
				echo "Wrong Answer"
				echo;;
		esac
	done
	unset _ANS
	unset _DID
}

clear
for i in "${dev_fs[@]}"; do
	while true; do
		_dev_opts
		echo "Please select the device ID method for $i"
		echo
		echo
		echo "Warning: SDX is not a safe method, because switch between sdaX and sdbX can happen."
		echo "Note: UUID and SDX most probably will change when the controller creates the new driver's interface"
		echo "The most safe way is to give device name by-id."
		echo "This ensures that controller will always target the device you wish."
		echo "This device, when configured, will inherit the $i label"
		read -rp "Input :: <= " ANS
		case "${ANS}" in
			[iI]|1			)
				eval "$i"="BY-ID"
				_ask_opts "$i" "ID" "Example ID: ata-Corsair_Force_LE_SSD16388018000104170290:0"
				break
				;;
			[II]|[ii]|2		)
				eval "$i"="UUID"
				_ask_opts "$i" "UUID" "Example UUID: 85bcc799-d907-4db7-87fb-8773ca1b9a76"
				break
				;;
			[III]|[iii]|3	)
				eval "$i"="SDX"
				_ask_opts "$i" "SDX" "Example SDX: /dev/sda3"
				break
				;;
			*				)
				clear;;
		esac
	done
done

cat >"${CCONFDIR}/system/devname.info" <<\EOF
# This file is will be automatically generated if you choose the guided fstab configuration entry
# However there is a manual entry on the submenu to aid extra needs.
# The general syntax of a line is as follows: {LABEL} {DEVID} {IDTYPE} {size{M,G}/all} {FSTYPE}
EOF

echo "BOOTFS ${BOOTFS} ${_BOOTID} ${_BOOTSIZE} ${_BOOTFSTYPE}" >> "${CCONFDIR}/system/devname.info"
echo "SYSFS ${SYSFS} ${_SYSID} ${_SYSSIZE} ${_SYSFSTYPE}" >> "${CCONFDIR}/system/devname.info"
echo "USERDATAFS ${USERDATAFS} ${_USERDATAID} ${_USERDATASIZE} ${_USERDATAFSTYPE}" >> "${CCONFDIR}/system/devname.info"
echo "BACKUPFS ${BACKUPFS} ${_BACKUPID} ${_BACKUPSIZE} ${_BACKUPFSTYPE}" >> "${CCONFDIR}/system/devname.info"

unset DEVNAME
unset BOOTFS
unset SYSFS
unset USERDATAFS
unset FBOPTIONS
unset FSOPTIONS
unset FUOPTIONS
unset BDPPS
unset SDPPS
unset UDPPS
unset FS_OPTS
