#!/bin/bash

#
# THE MAIN CHROOT SCRIPT.
# ALL CONFIGURATIONS HAPPEN HERE OR ARE SOURCED FROM HERE
# PLEASE DO NOT MODIFY THIS FILE, BUT REFEREE AT CONFIGURATION SUBMENU
# IF YOU NEED TO ADD EXTRA FEATURES TO YOUR SYSTEM.
# 

if echo "${_flag_tty}" | grep -q 'sshd'; then
	LC_COLLATE="C"
	LC_ALL="en_US.UTF-8"
	LC_CTYPE="en_US.UTF-8"
fi

source /etc/profile && export PS1="( 'Part C: Preparing to bootstrap' ) $PS1"
export CHDIR="/sinit.d"
export PATH=${PATH}:${CHDIR}
source "${CHDIR}/chinit.conf" \
&& source "${CHDIR}/cfunctions" && source "${CHDIR}/coptions"|| die "Failed"
[[ ! -e "${CHDIR}/emergeresume" ]] && echo "#####" >> "${CHDIR}/emergeresume" \
|| sed -i "/#####/d" "${CHDIR}/emergeresume"

inspector "$@"

# PART C BEGINS
if [[ "$(awk -F '=' '/UPDATE/{ print $2 }' <"${CHDIR}/chsinprog")" == 0 || -n $(echo "${_flag_force_new}") ]]; then
	_part_c "$@" || die "Part C FAILED"
else
	if echo "${_lawful_args[@]}" | grep -q 'gupdate'; then
		_e_report_back "Update and prepare system: Lawful entry detected, proceeding..."
	else
		if echo "${_enforce_args[@]}" | grep -q 'gupdate'; then
			_e_report_back "Update and prepare system: Enforce entry detected, forcing..."
			_part_c "$@" "cforce" || die "Part C FAILED"
		else
			if repeat_part "Portage Update"; then
				_part_c "$@" || die "Part C FAILED"
			fi
		fi
	fi
fi

# PART PORTAGE, PROFILE AND FEATURES UPDATE
if [[ "$(awk -F '=' '/UPDATE/{ print $2 }' < "${CHDIR}/chsinprog")" == 0 || -n $(echo "${_flag_force_new}") ]]; then
	part_portage "$@" && _monitor_chroot_flow "PORTAGE"
else
	if echo "${_lawful_args[@]}" | grep -q 'gportage'; then
		_e_report_back "Portage Configuration: Lawful entry detected, proceeding..."
	else
		if echo "${_enforce_args[@]}" | grep -q 'gportage'; then
			_e_report_back "Portage configuration: Enforce entry detected, forcing..."
			part_portage "$@" "cforce" && _monitor_chroot_flow "PORTAGE"
		else
			if repeat_part "Portage Configuration"; then
				part_portage "$@" && _monitor_chroot_flow "PORTAGE"
			fi
		fi
	fi
fi

# Part D Begins
_sreb() {
	echo -e "\e[35mPart D: Rebuilding system\e[0m"
	env-update > /dev/null 2>&1 && source /etc/profile && export PS1="( 'Part D: Rebuilding system' ) $PS1"
	export PATH=${PATH}:${CHDIR}
	build_the_world
	_monitor_chroot_flow "REBUILD"
}

if [[ "$(awk -F '=' '/REBUILD/{ print $2 }' <"${CHDIR}/chsinprog")" == 0 || -n $(echo "${_flag_force_new}") ]]; then
	_sreb
	if echo "${_lawful_args[@]}" | grep -q 'grebuild'; then
		_e_report_back "System Rebuild: Lawful entry detected, proceeding..."
	else
		if echo "${_enforce_args[@]}" | grep -q 'grebuild'; then
			_e_report_back "System Rebuild: Enforce entry detected, forcing..."
			_sreb "cforce"
		else
			_sreb
		fi
	fi
fi

# PART E BEGINS
if [[ "$(awk -F '=' '/CONFIGURE/{ print $2 }' <"${CHDIR}/chsinprog")" == 0 || -n $(echo "${_flag_force_new}") ]]; then
	configure_system_f "$@"
else
	if echo "${_lawful_args[@]}" | grep -q 'gconfigure'; then
		_e_report_back "System Configuration: Lawful entry detected, proceeding..."
	else
		if echo "${_enforce_args[@]}" | grep -q 'gconfigure'; then
			_e_report_back "System Configuration: Enforce entry detected, forcing..."
			configure_system_f "$@" "cforce"
		else
			if repeat_part "System Configuration"; then
				configure_system_f "$@"
			fi
		fi
	fi
fi

# PART F BEGINS
if [[ "$(awk -F '=' '/INSTALL/{ print $2 }' <"${CHDIR}/chsinprog")" == 0 || -n $(echo "${_flag_force_new}") ]]; then
	emerge_requested "$@"
else
	if echo "${_lawful_args[@]}" | grep -q 'ginst'; then
		_e_report_back "Emerge packages: Lawful entry detected, proceeding..."
	else
		if echo "${_enforce_args[@]}" | grep -q 'ginst'; then
			_e_report_back "Emerge packages: Enforce entry detected, forcing..."
			emerge_requested "$@" "cforce"
		else
			if repeat_part "Installing Packages"; then
				emerge_requested "$@"
			fi
		fi
	fi
fi
unset YN

# PART G BEGINS
if [[ "$(awk -F '=' '/RUNLEVEL/{ print $2 }' <"${CHDIR}/chsinprog")" == 0 || -n $(echo "${_flag_force_new}") ]]; then
	_runlevel_configuration
else
	if echo "${_lawful_args[@]}" | grep -q 'grun'; then
		_e_report_back "Runlevel: Lawful entry detected, proceeding..."
	else
		if echo "${_enforce_args[@]}" | grep -q 'grun'; then
			_e_report_back "Runlevel: Enforce entry detected, forcing..."
			_runlevel_configuration "cforce"
		else
			if repeat_part "Runlevel Configuration"; then
				_runlevel_configuration
			fi
		fi
	fi
fi
unset YN

# PART H BEGINS
if [[ -n "$(echo "${_flag_kernel}")" ]] || [[ -n "$(echo "${_flag_minimal}")" ]]; then
	:
else
	if [[ "$(awk -F '=' '/KERNEL/{ print $2 }' <"${CHDIR}/chsinprog")" == 0 || -n $(echo "${_flag_force_new}") ]]; then
		_kernel_build
	else
		if echo "${_lawful_args[@]}" | grep -q 'gkernel'; then
			_e_report_back "Kernel: Lawful entry detected, proceeding..."
		else
			if echo "${_enforce_args[@]}" | grep -q 'gkernel'; then
				_e_report_back "Kernel: Enforce entry detected, forcing..."
				_kernel_build "cforce"
			else
				if repeat_part "Kernel Configuration"; then
					_kernel_build
				fi
			fi
		fi
	fi
	unset YN
fi

# PART I BEGINS
if [[ -n "$(echo "${_flag_kernel}")" ]] || [[ -n "$(echo "${_flag_minimal}")" ]] || [[ -n "$(echo "${_flag_initrd}")" ]]; then
	:
else
	if [[ "$(awk -F '=' '/INITRAMFS/{ print $2 }' <"${CHDIR}/chsinprog")" == 0 || -n $(echo "${_flag_force_new}") ]]; then
		_initramfs_builder
	else
		if echo "${_lawful_args[@]}" | grep -q 'ginitrd'; then
			_e_report_back "Initramfs: Lawful entry detected, proceeding..."
		else
			if echo "${_enforce_args[@]}" | grep -q 'gkernel'; then
				_e_report_back "Initramfs: Enforce entry detected, forcing..."
				_initramfs_builder "cforce"
			else
				if repeat_part "Initramfs Configuration"; then
					_initramfs_builder
				fi
			fi
		fi
	fi
	unset YN
fi

if [[ -n "${_flag_minimal}" ]]; then
	rm -f /var/lib/portage/world
	touch /var/lib/portage/world
else
	emerge --deselect sys-kernel/gentoo-sources
	emerge --deselect sys-kernel/genkernel
	emerge --deselect sys-boot/grub:2
	emerge --deselect sys-kernel/dracut
	emerge --deselect dev-util/ccache
	emerge --deselect sys-devel/distcc
	emerge --deselect app-portage/eix
	emerge --deselect app-portage/gentoolkit
fi

_emerge_depclear

eclean-dist -d
eclean-pkg -d

# Creating user-data dir-tree
mkdir -p /user-data/persistent/{etc,var,logs,config.d,local,rmount}
mkdir -p /user-data/persistent/local/{data,home,root,mnt,media}
mkdir -p /user-data/tmpfs/{tmp,etc,run,opt,var}
