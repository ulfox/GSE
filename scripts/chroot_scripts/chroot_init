#!/bin/bash

#
# THE MAIN CHROOT SCRIPT.
# ALL CONFIGURATIONS HAPPEN HERE OR ARE SOURCED FROM HERE
# PLEASE DO NOT MODIFY THIS FILE, BUT REFEREE AT CONFIGURATION SUBMENU
# IF YOU NEED TO ADD EXTRA FEATURES TO YOUR SYSTEM.
# 

LC_COLLATE="C"
LC_ALL="en_US.UTF-8"
LC_CTYPE="en_US.UTF-8"

source /etc/profile && export PS1="( 'Part C: Preparing to bootstrap' ) $PS1"
export CHDIR="/sinit.d"
export PATH=${PATH}:${CHDIR}
source "${CHDIR}/chinit.conf" \
&& source "${CHDIR}/cfunctions" && source "${CHDIR}/coptions"|| die "Failed"
[[ ! -e "${CHDIR}/emergeresume" ]] && echo "#####" >> "${CHDIR}/emergeresume" \
|| sed -i "/#####/d" "${CHDIR}/emergeresume"

# PART C BEGINS
if [[ -n $(echo "$@" | grep '\--force-new') ]]; then
	_part_c "$@" || die
else
	if [[ "$(awk -F '=' '/UPDATE/{ print $2 }' <"${CHDIR}/chsinprog")" == 0 ]]; then
		_part_c "$@" || die
	else
		if [[ -n $(echo "$@" | grep '\--lawful-good') && -n $(echo "$@" | grep 'gupdate') ]]; then
			:
		else
			if repeat_part "Portage Update"; then
				_part_c "$@" || die "Part C FAILED"
			fi
		fi
	fi
fi

# PART PORTAGE, PROFILE AND FEATURES UPDATE
if [[ -n $(echo "$@" | grep '\--force-new') ]]; then
	part_portage "$@" && _monitor_chroot_flow "PORTAGE" || "PORTAGE PART FAILED"
else
	if [[ "$(awk -F '=' '/UPDATE/{ print $2 }' <"${CHDIR}/chsinprog")" == 0 ]]; then
		part_portage "$@" && _monitor_chroot_flow "PORTAGE" || "PORTAGE PART FAILED"
	else
		if [[ -n $(echo "$@" | grep '\--lawful-good') && -n $(echo "$@" | grep 'gportage') ]]; then
			:
		else
			if repeat_part "Portage Configuration"; then
				part_portage "$@" && _monitor_chroot_flow "PORTAGE" || "PORTAGE PART FAILED"
			fi
		fi
	fi
fi

if [[ -n $(echo "$@" | grep '\--force-new') ]]; then
	:
else
	if [[ -n $(echo "$@" | grep '\--lawful-good') && -n $(echo "$@" | grep 'grebuild') ]]; then
		:
	else
		if [[ -n $(echo "$@" | grep 'precomp') ]]; then
			# Part D Begins
			if [[ "$(awk -F '=' '/REBUILD/{ print $2 }' <"${CHDIR}/chsinprog")" == 0 ]]; then
				echo -e "\e[35mPart D: Rebuilding system\e[0m"
				env-update > /dev/null 2>&1 && source /etc/profile && export PS1="( 'Part D: Rebuilding system' ) $PS1"
				export PATH=${PATH}:${CHDIR}
				build_the_world
				chsinit_mon_f "REBUILD"
			fi
		fi
	fi
fi

# PART E BEGINS
if [[ -n $(echo "$@" | grep '\--force-new') ]]; then
	configure_system_f
else
	if [[ "$(awk -F '=' '/CONFIGURE/{ print $2 }' <"${CHDIR}/chsinprog")" == 0 ]]; then
		configure_system_f
	else
		if [[ -n $(echo "$@" | grep '\--lawful-good') && -n $(echo "$@" | grep 'gconfigure') ]]; then
			:
		else
			if repeat_part "System Configuration"; then
				configure_system_f
			fi
		fi
	fi
fi

# PART F BEGINS
if [[ -n $(echo "$@" | grep '\--force-new') ]]; then
	emerge_requested
else
	if [[ "$(awk -F '=' '/INSTALL/{ print $2 }' <"${CHDIR}/chsinprog")" == 0 ]]; then
		emerge_requested
	else
		if [[ -n $(echo "$@" | grep '\--lawful-good') && -n $(echo "$@" | grep 'ginstall') ]]; then
			:
		else
			if repeat_part "Installing Packages"; then
				emerge_requested
			fi
		fi
	fi
	unset YN
fi

# PART G BEGINS
if [[ -n $(echo "$@" | grep '\--force-new') ]]; then
	_runlevel_configuration
else
	if [[ "$(awk -F '=' '/RUNLEVEL/{ print $2 }' <"${CHDIR}/chsinprog")" == 0 ]]; then
		_runlevel_configuration
	else
		if [[ -n $(echo "$@" | grep '\--lawful-good') && -n $(echo "$@" | grep 'grun') ]]; then
			:
		else
			if repeat_part "Runlevel Configuration"; then
				_runlevel_configuration
			fi
		fi
	fi
	unset YN
fi

# PART H BEGINS
if [[ -z $(echo "$@" | grep '\--no-kernel') ]]; then
	if [[ -n $(echo "$@" | grep '\--force-new') ]]; then
		_kernel_build "$@"
	else
		if [[ "$(awk -F '=' '/KERNEL/{ print $2 }' <"${CHDIR}/chsinprog")" == 0 ]]; then
			_kernel_build
		else
			if [[ -n $(echo "$@" | grep '\--lawful-good') && -n $(echo "$@" | grep 'gkernel') ]]; then
				:
			else
				if repeat_part "Kernel Configuration"; then
					_kernel_build
				fi
			fi
		fi
		unset YN
	fi
else
	:
fi

# PART I BEGINS
if [[ -z $(echo "$@" | grep '\--no-kernel') && -z $(echo "$@" | grep '\--no-initramfs') ]]; then
	if [[ -n $(echo "$@" | grep '\--force-new') ]]; then
		_initramfs_builder
	else
		if [[ "$(awk -F '=' '/INITRAMFS/{ print $2 }' <"${CHDIR}/chsinprog")" == 0 ]]; then
			_initramfs_builder
		else
			if [[ -n $(echo "$@" | grep '\--lawful-good') && -n $(echo "$@" | grep 'ginitrd') ]]; then
				:
			else
				if repeat_part "Initramfs Configuration"; then
					_initramfs_builder
				fi
			fi
		fi
		unset YN
	fi
else
	:
fi

#emerge --deselect gentoo-sources
#rm -rf /var/tmp
#eclean-dist -d
#rm -rf /usr/src/linux-4.9.16-gentoo
#rm -rf /usr/src/linux
#rm -rf issues.info

# Creating user-data dir-tree
mkdir -p /user-data/persistent/{etc,var,logs,config.d,local,rmount}
mkdir -p /user-data/persistent/local/{data,home,root,mnt,media}
mkdir -p /user-data/tmpfs/{tmp,etc,run,opt,var}
