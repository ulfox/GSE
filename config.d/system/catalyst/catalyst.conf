# /etc/catalyst/catalyst.conf

# Simple desriptions of catalyst settings. Please refer to the online
# documentation for more information.

# Creates a .DIGESTS file containing the hash output from any of the supported
# options below.  Adding them all may take a long time.
# Supported hashes:
# adler32, crc32, crc32b, gost, haval128, haval160, haval192, haval224,
# haval256, md2, md4, md5, ripemd128, ripemd160, ripemd256, ripemd320, sha1,
# sha224, sha256, sha384, sha512, snefru128, snefru256, tiger, tiger128,
# tiger160, whirlpool
digests="md5 sha1 sha512 whirlpool"

# Creates a .CONTENTS file listing the contents of the file. Pick from any of
# the supported options below:
# auto		- strongly recommended
# tar-tv	- does 'tar tvf FILE'
# tar-tvz	- does 'tar tvzf FILE'
# tar-tvy	- does 'tar tvyf FILE'
# isoinfo-l	- does 'isoinfo -l -i FILE'
# isoinfo-f	- does 'isoinfo -f -i FILE'
# 'isoinfo-f' is the only option not chosen by the automatic algorithm.
# If this variable is empty, no .CONTENTS will be generated at all.
contents="auto"

# distdir specifies where your distfiles are located. This setting should
# work fine for most default installations.
distdir="/usr/portage/distfiles"

# envscript allows users to set options such as http proxies, MAKEOPTS,
# GENTOO_MIRRORS, or any other environment variables needed for building.
# The envscript file sets environment variables like so:
# export FOO="bar"
envscript="/etc/catalyst/catalystrc"

# Internal hash function catalyst should use for things like autoresume,
# seedcache, etc.  The default and fastest is crc32.  You should not ever need
# to change this unless your OS does not support it.
# Supported hashes:
# adler32, crc32, crc32b, gost, haval128, haval160, haval192, haval224,
# haval256, md2, md4, md5, ripemd128, ripemd160, ripemd256, ripemd320, sha1,
# sha224, sha256, sha384, sha512, snefru128, snefru256, tiger, tiger128,
# tiger160, whirlpool
hash_function="crc32"

# options set different build-time options for catalyst. Some examples are:
# autoresume = Attempt to resume a failed build, clear the autoresume flags with
#	the -a option to the catalyst cmdline.  -p will clear the autoresume flags
#	as well as your pkgcache and kerncache
#	( This option is not fully tested, bug reports welcome )
# bindist = enables the bindist USE flag, please see package specific definition,
#	however, it is suggested to enable this if redistributing builds.
# ccache = enables build time ccache support
# distcc = enable distcc support for building. You have to set distcc_hosts in
# 	your spec file.
# icecream = enables icecream compiler cluster support for building
# kerncache = keeps a tbz2 of your built kernel and modules (useful if your
#	build stops in livecd-stage2)
# pkgcache = keeps a tbz2 of every built package (useful if your build stops
#	prematurely)
# preserve_libs = enables portage to preserve used libs when unmerging packages
#   (used on installcd-stage2 and stage4 targets)
# seedcache = use the build output of a previous target if it exists to speed up
#	the copy
# snapcache = cache the snapshot so that it can be bind-mounted into the chroot.
#	WARNING: moving parts of the portage tree from within fsscript *will* break
#	your cache. The cache is unlinked before any empty or rm processing, though.
#
# (These options can be used together)
options="autoresume bindist kerncache pkgcache seedcache snapcache distcc" #ccache"

# portdir specifies the source portage tree used by the snapshot target.
portdir="/usr/portage"

# sharedir specifies where all of the catalyst runtime executables are. Most
# users do not need to change this.
sharedir="/usr/lib64/catalyst"

# snapshot_cache specifies where the snapshots will be cached to if snapcache is
# enabled in the options.
#snapshot_cache="/var/tmp/catalyst/snapshot_cache"
snapshot_cache="/mnt/gentoo/catalyst/snapshot_cache"

# storedir specifies where catalyst will store everything that it builds, and
# also where it will put its temporary files and caches.
#storedir="/var/tmp/catalyst" 
storedir="/mnt/gentoo/catalyst"

# port_logdir is where all build logs will be kept. This dir will be automatically cleaned
# of all logs over 30 days old. If left undefined the logs will remain in the build directory
# as usual and get cleaned every time a stage build is restarted.
#port_logdir="/var/tmp/catalyst/tmp"
port_logdir="/mnt/gentoo/catalyst/tmp"

# var_tmpfs_portage will mount a tmpfs for /var/tmp/portage so building takes place in RAM
# this feature requires a pretty large tmpfs ({open,libre}office needs ~8GB to build)
# WARNING: If you use too much RAM everything will fail horribly and it is not our fault.
# set size of /var/tmp/portage tmpfs in gigabytes
# var_tmpfs_portage=16
